<Window x:Class="Sim80C51.SimulatorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Sim80C51"
        xmlns:cpuctl="clr-namespace:Sim80C51.Controls.CPU"
        xmlns:ctl="clr-namespace:Sim80C51.Controls"
        mc:Ignorable="d"
        Title="80C51 Simulator" Height="700" Width="1200" WindowStartupLocation="CenterScreen" Loaded="Window_Loaded">
    <Window.DataContext>
        <local:SimulatorWindowContext/>
    </Window.DataContext>
    <Window.Resources>
        <DataTemplate x:Key="HeaderTemplateArrowUp">
            <DockPanel LastChildFill="True" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}">
                <Path x:Name="arrowUp" StrokeThickness="1" Fill="Gray" Data="M 5,10 L 15,10 L 10,5 L 5,10" DockPanel.Dock="Right" Width="20" HorizontalAlignment="Right" Margin="5,0,5,0" SnapsToDevicePixels="True"/>
                <TextBlock Text="{Binding }" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowDown">
            <DockPanel LastChildFill="True" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}">
                <Path x:Name="arrowDown" StrokeThickness="1" Fill="Gray"  Data="M 5,5 L 10,10 L 15,5 L 5,5" DockPanel.Dock="Right" Width="20" HorizontalAlignment="Right" Margin="5,0,5,0" SnapsToDevicePixels="True"/>
                <TextBlock Text="{Binding }" />
            </DockPanel>
        </DataTemplate>

    </Window.Resources>
    <DockPanel LastChildFill="True">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File" Height="25">
                <MenuItem Header="_Load Workspace" Command="{Binding LoadWorkspaceCommand}">
                    <MenuItem.Style>
                        <Style TargetType="{x:Type MenuItem}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ProcessorActivated}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <MenuItem Header="_Save Workspace" Command="{Binding SaveWorkspaceCommand}" IsEnabled="{Binding ProcessorActivated}"/>
                <Separator/>
                <MenuItem Header="_Exit" Command="{Binding ExitCommand}"/>
            </MenuItem>
            <MenuItem Header="_Listing" Height="25" IsEnabled="{Binding ProcessorActivated}">
                <MenuItem Header="_Load" Command="{Binding ListingLoadCommand}"/>
                <MenuItem Header="_Save" Command="{Binding ListingSaveCommand}"/>
            </MenuItem>
            <MenuItem Header="_Memory" Height="25" IsEnabled="{Binding ProcessorActivated}">
                <MenuItem Header="_Add" Command="{Binding AddExternalMemoryCommand}"/>
                <MenuItem Header="_Load" Command="{Binding LoadExternalMemoryCommand}"/>
            </MenuItem>
            <MenuItem Header="_Interrupt" Height="25" IsEnabled="{Binding ProcessorActivated}" ItemsSource="{Binding Path=IRQMenuItems}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Command" Value="{Binding Path=DataContext.ExecIRQCommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" />
                        <Setter Property="CommandParameter" Value="{Binding}" />
                        <Setter Property="Header" Value="{Binding Title}"/>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
        </Menu>
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <ToolBar.Style>
                    <Style TargetType="{x:Type ToolBar}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ProcessorActivated}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToolBar.Style>
                <TextBlock VerticalAlignment="Center" Margin="5,0">Select Processor:</TextBlock>
                <ComboBox ItemsSource="{Binding ProcessorList}" SelectedValue="{Binding SelectedProcessor}" Width="200" Height="25" SelectedValuePath="Value" DisplayMemberPath="Key"/>
                <Button Width="80" Command="{Binding ActivateDeviceConfigCommand}" Content="Activate">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedProcessor}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </ToolBar>
            <ToolBar>
                <ToolBar.Style>
                    <Style TargetType="{x:Type ToolBar}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ProcessorActivated}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToolBar.Style>
                <Button Command="{Binding OneStepCommand}" Width="50">Step</Button>
                <Button Command="{Binding PlayCommand}" Width="50">Play</Button>
                <Button Command="{Binding ResetCommand}" Width="50" >Reset</Button>
                <Separator/>
                <Button Command="{Binding GotoPcCommand}">Goto PC</Button>
            </ToolBar>
        </ToolBarTray>
        <DockPanel LastChildFill="True">
            <Grid DockPanel.Dock="Right">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ProcessorActivated}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TabControl x:Name="memBox">
                    <TabItem Header="Internal MEM">
                        <DockPanel x:Name="intMemBox">
                            <TextBlock DockPanel.Dock="Top">Yellow: SFR, Blue: Upper indirect RAM</TextBlock>
                        </DockPanel>
                    </TabItem>
                </TabControl>
                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <GroupBox Header="Breakpoints">
                        <ListBox ItemsSource="{Binding Breakpoints}" Width="100">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding StringFormat=Address: {0:X4}}" Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}">
                                        <TextBlock.InputBindings>
                                            <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DataContext.NavToAddressCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}" />
                                        </TextBlock.InputBindings>
                                        <TextBlock.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Nav To" Command="{Binding PlacementTarget.Tag.NavToAddressCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding}"/>
                                                <MenuItem Header="Delete" Command="{Binding PlacementTarget.Tag.DeleteBpCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding}"/>
                                            </ContextMenu>
                                        </TextBlock.ContextMenu>
                                    </TextBlock>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </GroupBox>
                    <GroupBox Header="Labels">
                        <ListView Width="200" ItemsSource="{Binding LabelView}" GridViewColumnHeader.Click="LabelView_Click">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn DisplayMemberBinding="{Binding Address, StringFormat={}{0:X4}}">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Content="Addr." Padding="5,0,0,0" HorizontalContentAlignment="Left" MinWidth="60" Name="Address" />
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                    <GridViewColumn DisplayMemberBinding="{Binding Label}">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Content="Label" Padding="5,0,0,0" HorizontalContentAlignment="Left" MinWidth="90" Name="Label" />
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <EventSetter Event="MouseDoubleClick" Handler="LabelView_MouseDoubleClick" />
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </GroupBox>
                    <GroupBox Header="Memory Monitor">
                        <DockPanel>
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                                <TextBlock Margin="2" VerticalAlignment="Center">DPTR:</TextBlock>
                                <TextBox Width="40" Margin="2" Text="{Binding DptrAddValue}"/>
                                <Button Margin="2" Command="{Binding AddDptrCommand}">Add</Button>
                            </StackPanel>
                            <ListBox ItemsSource="{Binding MemoryPointer}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding StringFormat=Address: {0:X4}}" Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}">
                                            <TextBlock.ContextMenu>
                                                <ContextMenu>
                                                     <MenuItem Header="Delete" Command="{Binding PlacementTarget.Tag.DeleteDptrCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding}"/>
                                                </ContextMenu>
                                            </TextBlock.ContextMenu>
                                        </TextBlock>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DockPanel>
                    </GroupBox>
                </StackPanel>
            </Grid>
            <GroupBox Header="Processor" DockPanel.Dock="Bottom" x:Name="cpuBox" Visibility="Collapsed"/>
            <ctl:ListingEditor x:Name="listingEditor"/>
        </DockPanel>
    </DockPanel>
</Window>
